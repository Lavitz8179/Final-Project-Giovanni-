<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (WHO Suicide Statistics)' inline='true' name='federated.193a67a1cijxc619tsdp80rst5v0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='WHO Suicide Statistics' name='excel-direct.0a3g2g71hf88r31gjwh1o1a03rod'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/giova/Desktop/Github Final Project/Dataset puliti/WHO Suicide Statistics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0a3g2g71hf88r31gjwh1o1a03rod' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='string' name='sex' ordinal='3' />
            <column datatype='string' name='age' ordinal='4' />
            <column datatype='integer' name='suicides_no' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0a3g2g71hf88r31gjwh1o1a03rod' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='string' name='sex' ordinal='3' />
            <column datatype='string' name='age' ordinal='4' />
            <column datatype='integer' name='suicides_no' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10001:no:A1:G10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF238849C95F49B8A1B90B56B5068E2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF238849C95F49B8A1B90B56B5068E2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF238849C95F49B8A1B90B56B5068E2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sex]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>sex</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF238849C95F49B8A1B90B56B5068E2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>130</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF238849C95F49B8A1B90B56B5068E2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>suicides_no</remote-name>
            <remote-type>20</remote-type>
            <local-name>[suicides_no]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>suicides_no</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF238849C95F49B8A1B90B56B5068E2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AF238849C95F49B8A1B90B56B5068E2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AF238849C95F49B8A1B90B56B5068E2A]' role='measure' type='quantitative' />
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
      <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;IT&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_AF238849C95F49B8A1B90B56B5068E2A'>
            <properties context=''>
              <relation connection='excel-direct.0a3g2g71hf88r31gjwh1o1a03rod' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='integer' name='year' ordinal='2' />
                  <column datatype='string' name='sex' ordinal='3' />
                  <column datatype='string' name='age' ordinal='4' />
                  <column datatype='integer' name='suicides_no' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Foglio 3'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6C085C9A-598D-452B-B0FE-45EAF0FF908B}' />
    </worksheet>
    <worksheet name='Mappa numero di suicidi'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Numero di suicidi nel mondo</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (WHO Suicide Statistics)' name='federated.193a67a1cijxc619tsdp80rst5v0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.193a67a1cijxc619tsdp80rst5v0'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.193a67a1cijxc619tsdp80rst5v0].[Longitude (generated)]' field-type='quantitative' max='18963702.14811964' min='-21111314.537458856' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.193a67a1cijxc619tsdp80rst5v0].[Latitude (generated)]' field-type='quantitative' max='15057264.303053042' min='-8357351.3822319899' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.193a67a1cijxc619tsdp80rst5v0].[sum:suicides_no:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.193a67a1cijxc619tsdp80rst5v0].[sum:suicides_no:qk]' />
              <lod column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]' />
              <geometry column='[federated.193a67a1cijxc619tsdp80rst5v0].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='has-halo' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.193a67a1cijxc619tsdp80rst5v0].[Latitude (generated)]</rows>
        <cols>[federated.193a67a1cijxc619tsdp80rst5v0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{22AC05CC-48D0-4B1E-80CB-746848576BDA}' />
    </worksheet>
    <worksheet name='Suicidi negli anni (barplot)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Numero di suicidi negli anni</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (WHO Suicide Statistics)' name='federated.193a67a1cijxc619tsdp80rst5v0' />
          </datasources>
          <datasource-dependencies datasource='federated.193a67a1cijxc619tsdp80rst5v0'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Iran (Islamic Rep of)&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;TFYR Macedonia&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Reunion&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Saint Vincent and Grenadines&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Virgin Islands (USA)&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Rodrigues&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Macau&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.193a67a1cijxc619tsdp80rst5v0].[sum:suicides_no:qk]</rows>
        <cols>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{FDD8EB8B-63A1-4100-B9E3-9E913BD1950F}' />
    </worksheet>
    <worksheet name='Suicidi negli anni (lineplot)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Numero di suicidi negli anni</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (WHO Suicide Statistics)' name='federated.193a67a1cijxc619tsdp80rst5v0' />
          </datasources>
          <datasource-dependencies datasource='federated.193a67a1cijxc619tsdp80rst5v0'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Iran (Islamic Rep of)&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;TFYR Macedonia&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Reunion&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Saint Vincent and Grenadines&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Virgin Islands (USA)&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Rodrigues&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Macau&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]</column>
            <column>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.193a67a1cijxc619tsdp80rst5v0].[sum:suicides_no:qk]</rows>
        <cols>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{E209264E-5F43-4AB6-BC3C-F67C718EFC43}' />
    </worksheet>
    <worksheet name='Suicidi negli anni (lineplot) [Italy]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Numero di suicidi negli anni</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (WHO Suicide Statistics)' name='federated.193a67a1cijxc619tsdp80rst5v0' />
          </datasources>
          <datasource-dependencies datasource='federated.193a67a1cijxc619tsdp80rst5v0'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Iran (Islamic Rep of)&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;TFYR Macedonia&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Reunion&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Saint Vincent and Grenadines&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Virgin Islands (USA)&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Rodrigues&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Macau&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]</column>
            <column>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.193a67a1cijxc619tsdp80rst5v0].[sum:suicides_no:qk]</rows>
        <cols>([federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk] / [federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok])</cols>
      </table>
      <simple-id uuid='{02F4BC5E-F4AC-4394-B423-4E37FFD50003}' />
    </worksheet>
    <worksheet name='Suicidi negli anni (lineplot) [Russia]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Numero di suicidi negli anni</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (WHO Suicide Statistics)' name='federated.193a67a1cijxc619tsdp80rst5v0' />
          </datasources>
          <datasource-dependencies datasource='federated.193a67a1cijxc619tsdp80rst5v0'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Iran (Islamic Rep of)&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;TFYR Macedonia&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Reunion&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Saint Vincent and Grenadines&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Virgin Islands (USA)&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Rodrigues&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Macau&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]</column>
            <column>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.193a67a1cijxc619tsdp80rst5v0].[sum:suicides_no:qk]</rows>
        <cols>([federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk] / [federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok])</cols>
      </table>
      <simple-id uuid='{911FD1BC-B19C-423F-80B2-3D5A1C124672}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Mappa numero di suicidi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='dropdown' param='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.193a67a1cijxc619tsdp80rst5v0].[sum:suicides_no:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</field>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28A89E1F-4B63-43DC-BFF7-5D6ADD9108AB}' />
    </window>
    <window class='worksheet' name='Suicidi negli anni (barplot)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='dropdown' param='[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</field>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]</field>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B9D4185-2645-455C-B52A-4BF0749E4D27}' />
    </window>
    <window class='worksheet' name='Suicidi negli anni (lineplot)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='dropdown' param='[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</field>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]</field>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2103BA49-D08D-4271-ABC3-294257568549}' />
    </window>
    <window class='worksheet' name='Suicidi negli anni (lineplot) [Russia]'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]' type='filter' />
            <card mode='dropdown' param='[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</field>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]</field>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97377CD1-5E06-4DB8-98F8-91F4B5302993}' />
    </window>
    <window class='worksheet' maximized='true' name='Suicidi negli anni (lineplot) [Italy]'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]' type='filter' />
            <card mode='dropdown' param='[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:country:nk]</field>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:ok]</field>
            <field>[federated.193a67a1cijxc619tsdp80rst5v0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B634431-9494-4598-94D2-BC09CEF5C021}' />
    </window>
    <window class='worksheet' name='Foglio 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DB086453-BF22-4B94-BFFE-EBDB3BACE0A4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Foglio 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Mappa numero di suicidi' width='192'>
      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
      /wdudi+LuirwqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Suicidi negli anni (barplot)' width='192'>
      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
      1DVCAIK65v8DWuBkak6xEoMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Suicidi negli anni (lineplot)' width='192'>
      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
      WGMKwORY8/8D0Ptb8zWiP7MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Suicidi negli anni (lineplot) [Italy]' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Suicidi negli anni (lineplot) [Russia]' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
